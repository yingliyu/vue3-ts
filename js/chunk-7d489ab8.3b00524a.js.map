{"version":3,"sources":["webpack:///./src/views/signin/index.vue","webpack:///./src/views/signin/index.vue?df87","webpack:///./src/views/signin/index.vue?82cd","webpack:///./src/components/validate-input.vue","webpack:///./src/components/validate-input.vue?f048","webpack:///./src/components/validate-input.vue?0ff1","webpack:///./src/components/validate-form.vue","webpack:///./node_modules/mitt/dist/mitt.es.js","webpack:///./src/components/validate-form.vue?2094","webpack:///./src/components/validate-form.vue?6b68"],"names":["class","submitForm","type","label","placeholder","formData","email","rules","emailRules","name","nameRules","pwd","pwdRules","repwd","prepwdRules","props","components","ValidateForm","ValidateInput","setup","router","message","validator","validate","console","log","a","post","then","res","setTimeout","push","render","for","tag","inputRef","error","id","aria-describedby","val","validateHandle","$attrs","emailReg","String","Array","modelValue","default","context","get","set","emit","allPassed","every","rule","passed","trim","test","all","n","Map","on","t","e","i","off","splice","indexOf","slice","map","emitter","emits","funcArr","result","func","callback"],"mappings":"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","file":"js/chunk-7d489ab8.3b00524a.js","sourcesContent":["<template>\n  <div class=\"signin-wrapper\">\n    <h2>注册</h2>\n    <validate-form @form-submit=\"submitForm\">\n      <div class=\"mb-3\">\n        <validate-input\n          type=\"email\"\n          label=\"邮箱\"\n          placeholder=\"请输入邮箱\"\n          v-model=\"formData.email\"\n          :rules=\"emailRules\"\n        ></validate-input>\n      </div>\n      <div class=\"mb-3\">\n        <validate-input\n          type=\"input\"\n          label=\"昵称\"\n          placeholder=\"请输入昵称\"\n          v-model=\"formData.name\"\n          :rules=\"nameRules\"\n        ></validate-input>\n      </div>\n      <div class=\"mb-3\">\n        <validate-input\n          type=\"password\"\n          label=\"密码\"\n          placeholder=\"密码\"\n          v-model=\"formData.pwd\"\n          :rules=\"pwdRules\"\n        ></validate-input>\n      </div>\n      <div class=\"mb-3\">\n        <validate-input\n          type=\"password\"\n          label=\"重复密码\"\n          placeholder=\"请再次输入密码\"\n          v-model=\"formData.repwd\"\n          :rules=\"prepwdRules\"\n        ></validate-input>\n      </div>\n    </validate-form>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, reactive } from 'vue';\nimport ValidateForm from '../../components/validate-form.vue';\nimport ValidateInput, { RuleEmailType } from '../../components/validate-input.vue';\nimport axios from 'axios';\nimport createMessage from '@/components/create-message';\nimport { useRouter } from 'vue-router';\nexport default defineComponent({\n  name: 'SignIn',\n  props: {},\n  components: {\n    ValidateForm,\n    ValidateInput\n  },\n  setup() {\n    const router = useRouter();\n    const formData = reactive({\n      email: '',\n      name: '',\n      pwd: '',\n      repwd: ''\n    });\n    const emailRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '电子邮箱地址不能为空'\n      },\n      {\n        type: 'email',\n        message: ' 请输入正确的电子邮箱格式'\n      }\n    ];\n    const nameRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '昵称不能为空'\n      }\n    ];\n    const pwdRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '密码不能为空'\n      }\n    ];\n    const prepwdRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '重复密码不能为空'\n      },\n      {\n        type: 'custom',\n        message: '密码不相同',\n        validator: () => formData.pwd === formData.repwd\n      }\n    ];\n    const submitForm = async (validate: boolean) => {\n      console.log(1);\n      if (validate) {\n        try {\n          await axios.post('/zhihu/signin', formData).then((res) => {\n            console.log(res);\n            createMessage('注册成功，正在跳转登陆页面', 'success');\n            setTimeout(() => {\n              router.push('login');\n            }, 2000);\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    return { formData, emailRules, nameRules, pwdRules, prepwdRules, submitForm };\n  }\n});\n</script>\n<style scoped lang=\"less\"></style>\n","\nimport { defineComponent, reactive } from 'vue';\nimport ValidateForm from '../../components/validate-form.vue';\nimport ValidateInput, { RuleEmailType } from '../../components/validate-input.vue';\nimport axios from 'axios';\nimport createMessage from '@/components/create-message';\nimport { useRouter } from 'vue-router';\nexport default defineComponent({\n  name: 'SignIn',\n  props: {},\n  components: {\n    ValidateForm,\n    ValidateInput\n  },\n  setup() {\n    const router = useRouter();\n    const formData = reactive({\n      email: '',\n      name: '',\n      pwd: '',\n      repwd: ''\n    });\n    const emailRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '电子邮箱地址不能为空'\n      },\n      {\n        type: 'email',\n        message: ' 请输入正确的电子邮箱格式'\n      }\n    ];\n    const nameRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '昵称不能为空'\n      }\n    ];\n    const pwdRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '密码不能为空'\n      }\n    ];\n    const prepwdRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '重复密码不能为空'\n      },\n      {\n        type: 'custom',\n        message: '密码不相同',\n        validator: () => formData.pwd === formData.repwd\n      }\n    ];\n    const submitForm = async (validate: boolean) => {\n      console.log(1);\n      if (validate) {\n        try {\n          await axios.post('/zhihu/signin', formData).then((res) => {\n            console.log(res);\n            createMessage('注册成功，正在跳转登陆页面', 'success');\n            setTimeout(() => {\n              router.push('login');\n            }, 2000);\n          });\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    };\n    return { formData, emailRules, nameRules, pwdRules, prepwdRules, submitForm };\n  }\n});\n","import { render } from \"./index.vue?vue&type=template&id=e1fa3796\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"validate-input-wrapper\">\n    <label for=\"exampleInputEmail1\" class=\"form-label\">{{ label }}</label>\n    <input\n      class=\"form-control\"\n      :class=\"{ 'is-invalid': inputRef.error }\"\n      id=\"exampleInputEmail1\"\n      v-if=\"tag !== 'textarea'\"\n      aria-describedby=\"emailHelp\"\n      v-model=\"inputRef.val\"\n      @blur=\"validateHandle\"\n      v-bind=\"$attrs\"\n    />\n    <textarea\n      v-else\n      class=\"form-control\"\n      :class=\"{ 'is-invalid': inputRef.error }\"\n      v-model=\"inputRef.val\"\n      @blur=\"validateHandle\"\n      v-bind=\"$attrs\"\n    ></textarea>\n    <div class=\"invalid-feedback\">\n      {{ inputRef.message }}\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType, reactive, computed } from 'vue';\nimport { emitter } from './validate-form.vue';\nconst emailReg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\ninterface RuleEmailProps {\n  type: 'required' | 'email' | 'custom';\n  message: string;\n  validator?: () => boolean;\n}\nexport type RuleEmailType = RuleEmailProps[];\nexport type TagType = 'input' | 'textarea';\nexport default defineComponent({\n  name: 'validate-input',\n  props: {\n    label: String,\n    rules: Array as PropType<RuleEmailType>,\n    modelValue: String,\n    tag: {\n      type: String as PropType<TagType>,\n      default: 'input'\n    }\n  },\n  // props are reactive\n  setup(props, context) {\n    const inputRef = reactive({\n      val: computed({\n        get: () => props.modelValue || '',\n        set: (val) => {\n          context.emit('update:modelValue', val);\n        }\n      }),\n      error: false,\n      message: ''\n    });\n\n    const validateHandle = () => {\n      if (props.rules) {\n        const allPassed = props.rules.every((rule) => {\n          let passed = true;\n          inputRef.message = rule.message;\n          switch (rule.type) {\n            case 'required':\n              passed = !(inputRef.val.trim() === '');\n              break;\n            case 'email':\n              passed = emailReg.test(inputRef.val);\n              break;\n            case 'custom':\n              passed = rule.validator ? rule.validator() : true;\n              break;\n            default:\n              break;\n          }\n          return passed;\n        });\n        inputRef.error = !allPassed;\n        return allPassed;\n      }\n      return true;\n    };\n    onMounted(() => {\n      // 给监听器发送信号\n      emitter.emit('form-item-created', validateHandle);\n    });\n    return { inputRef, validateHandle };\n  }\n});\n</script>\n<style scoped></style>\n","\nimport { defineComponent, onMounted, PropType, reactive, computed } from 'vue';\nimport { emitter } from './validate-form.vue';\nconst emailReg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\ninterface RuleEmailProps {\n  type: 'required' | 'email' | 'custom';\n  message: string;\n  validator?: () => boolean;\n}\nexport type RuleEmailType = RuleEmailProps[];\nexport type TagType = 'input' | 'textarea';\nexport default defineComponent({\n  name: 'validate-input',\n  props: {\n    label: String,\n    rules: Array as PropType<RuleEmailType>,\n    modelValue: String,\n    tag: {\n      type: String as PropType<TagType>,\n      default: 'input'\n    }\n  },\n  // props are reactive\n  setup(props, context) {\n    const inputRef = reactive({\n      val: computed({\n        get: () => props.modelValue || '',\n        set: (val) => {\n          context.emit('update:modelValue', val);\n        }\n      }),\n      error: false,\n      message: ''\n    });\n\n    const validateHandle = () => {\n      if (props.rules) {\n        const allPassed = props.rules.every((rule) => {\n          let passed = true;\n          inputRef.message = rule.message;\n          switch (rule.type) {\n            case 'required':\n              passed = !(inputRef.val.trim() === '');\n              break;\n            case 'email':\n              passed = emailReg.test(inputRef.val);\n              break;\n            case 'custom':\n              passed = rule.validator ? rule.validator() : true;\n              break;\n            default:\n              break;\n          }\n          return passed;\n        });\n        inputRef.error = !allPassed;\n        return allPassed;\n      }\n      return true;\n    };\n    onMounted(() => {\n      // 给监听器发送信号\n      emitter.emit('form-item-created', validateHandle);\n    });\n    return { inputRef, validateHandle };\n  }\n});\n","import { render } from \"./validate-input.vue?vue&type=template&id=574c4524\"\nimport script from \"./validate-input.vue?vue&type=script&lang=ts\"\nexport * from \"./validate-input.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <form class=\"validate-form-wrapper\">\n    <slot name=\"default\"></slot>\n    <div class=\"submit-area pb-3\" @click.prevent=\"submitForm\">\n      <slot name=\"submit\">\n        <button type=\"submit\" class=\"btn btn-primary\">\n          提交\n        </button>\n      </slot>\n    </div>\n  </form>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, onUnmounted } from \"vue\";\nimport mitt from \"mitt\";\ntype ValidateFunc = () => boolean;\n// 创建一个监听器\nexport const emitter = mitt();\nexport default defineComponent({\n  name: \"ValidateForm\",\n  props: {},\n  emits: [\"form-submit\"],\n  setup(props, context) {\n    let funcArr: ValidateFunc[] = [];\n\n    const submitForm = () => {\n      const result = funcArr.map((func) => func()).every((res) => res);\n      context.emit(\"form-submit\", result);\n    };\n    // 事件回调函数\n    const callback: any = (func: ValidateFunc) => {\n      funcArr.push(func);\n    };\n    // 将回调函数添加到监听器中\n    emitter.on(\"form-item-created\", callback);\n    // 组件卸载时清理监听器\n    onUnmounted(() => {\n      emitter.off(\"form-item-created\", callback);\n      funcArr = [];\n    });\n\n    return { submitForm };\n  },\n  // mounted() {\n  //   this.$on(\"item-created\", () => {});\n  // }, // 建议使用mitt代替\n});\n</script>\n<style scoped></style>\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i&&i.push(e)||n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&i.splice(i.indexOf(e)>>>0,1)},emit:function(t,e){(n.get(t)||[]).slice().map(function(n){n(e)}),(n.get(\"*\")||[]).slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.es.js.map\n","\nimport { defineComponent, onUnmounted } from \"vue\";\nimport mitt from \"mitt\";\ntype ValidateFunc = () => boolean;\n// 创建一个监听器\nexport const emitter = mitt();\nexport default defineComponent({\n  name: \"ValidateForm\",\n  props: {},\n  emits: [\"form-submit\"],\n  setup(props, context) {\n    let funcArr: ValidateFunc[] = [];\n\n    const submitForm = () => {\n      const result = funcArr.map((func) => func()).every((res) => res);\n      context.emit(\"form-submit\", result);\n    };\n    // 事件回调函数\n    const callback: any = (func: ValidateFunc) => {\n      funcArr.push(func);\n    };\n    // 将回调函数添加到监听器中\n    emitter.on(\"form-item-created\", callback);\n    // 组件卸载时清理监听器\n    onUnmounted(() => {\n      emitter.off(\"form-item-created\", callback);\n      funcArr = [];\n    });\n\n    return { submitForm };\n  },\n  // mounted() {\n  //   this.$on(\"item-created\", () => {});\n  // }, // 建议使用mitt代替\n});\n","import { render } from \"./validate-form.vue?vue&type=template&id=7150e310\"\nimport script from \"./validate-form.vue?vue&type=script&lang=ts\"\nexport * from \"./validate-form.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}