{"version":3,"sources":["webpack:///./src/components/validate-input.vue","webpack:///./src/components/validate-input.vue?f048","webpack:///./src/components/validate-input.vue?0ff1","webpack:///./src/views/login/index.vue","webpack:///./src/views/login/index.vue?a33f","webpack:///./src/views/login/index.vue?c6c3","webpack:///./src/components/validate-form.vue","webpack:///./node_modules/mitt/dist/mitt.es.js","webpack:///./src/components/validate-form.vue?2094","webpack:///./src/components/validate-form.vue?6b68"],"names":["class","for","label","tag","inputRef","error","id","aria-describedby","val","validateHandle","$attrs","message","emailReg","name","props","String","rules","Array","modelValue","type","default","setup","context","get","set","emit","allPassed","every","rule","passed","trim","test","validator","render","onFormSubmit","submit","placeholder","emailRef","emailRules","passwordVal","passwordRules","components","ValidateForm","ValidateInput","store","router","result","payload","email","value","password","dispatch","root","then","data","console","log","setTimeout","push","catch","e","submitForm","all","n","Map","on","t","i","off","splice","indexOf","slice","map","emitter","emits","funcArr","func","res","callback"],"mappings":"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","file":"js/login.6517deb3.js","sourcesContent":["<template>\n  <div class=\"validate-input-wrapper\">\n    <label for=\"exampleInputEmail1\" class=\"form-label\">{{ label }}</label>\n    <input\n      class=\"form-control\"\n      :class=\"{ 'is-invalid': inputRef.error }\"\n      id=\"exampleInputEmail1\"\n      v-if=\"tag !== 'textarea'\"\n      aria-describedby=\"emailHelp\"\n      v-model=\"inputRef.val\"\n      @blur=\"validateHandle\"\n      v-bind=\"$attrs\"\n    />\n    <textarea\n      v-else\n      class=\"form-control\"\n      :class=\"{ 'is-invalid': inputRef.error }\"\n      v-model=\"inputRef.val\"\n      @blur=\"validateHandle\"\n      v-bind=\"$attrs\"\n    ></textarea>\n    <div class=\"invalid-feedback\">\n      {{ inputRef.message }}\n    </div>\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, onMounted, PropType, reactive, computed } from 'vue';\nimport { emitter } from './validate-form.vue';\nconst emailReg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\ninterface RuleEmailProps {\n  type: 'required' | 'email' | 'custom';\n  message: string;\n  validator?: () => boolean;\n}\nexport type RuleEmailType = RuleEmailProps[];\nexport type TagType = 'input' | 'textarea';\nexport default defineComponent({\n  name: 'validate-input',\n  props: {\n    label: String,\n    rules: Array as PropType<RuleEmailType>,\n    modelValue: String,\n    tag: {\n      type: String as PropType<TagType>,\n      default: 'input'\n    }\n  },\n  // props are reactive\n  setup(props, context) {\n    const inputRef = reactive({\n      val: computed({\n        get: () => props.modelValue || '',\n        set: (val) => {\n          context.emit('update:modelValue', val);\n        }\n      }),\n      error: false,\n      message: ''\n    });\n\n    const validateHandle = () => {\n      if (props.rules) {\n        const allPassed = props.rules.every((rule) => {\n          let passed = true;\n          inputRef.message = rule.message;\n          switch (rule.type) {\n            case 'required':\n              passed = !(inputRef.val.trim() === '');\n              break;\n            case 'email':\n              passed = emailReg.test(inputRef.val);\n              break;\n            case 'custom':\n              passed = rule.validator ? rule.validator() : true;\n              break;\n            default:\n              break;\n          }\n          return passed;\n        });\n        inputRef.error = !allPassed;\n        return allPassed;\n      }\n      return true;\n    };\n    onMounted(() => {\n      // 给监听器发送信号\n      emitter.emit('form-item-created', validateHandle);\n    });\n    return { inputRef, validateHandle };\n  }\n});\n</script>\n<style scoped></style>\n","\nimport { defineComponent, onMounted, PropType, reactive, computed } from 'vue';\nimport { emitter } from './validate-form.vue';\nconst emailReg = /^[A-Za-z0-9\\u4e00-\\u9fa5]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$/;\ninterface RuleEmailProps {\n  type: 'required' | 'email' | 'custom';\n  message: string;\n  validator?: () => boolean;\n}\nexport type RuleEmailType = RuleEmailProps[];\nexport type TagType = 'input' | 'textarea';\nexport default defineComponent({\n  name: 'validate-input',\n  props: {\n    label: String,\n    rules: Array as PropType<RuleEmailType>,\n    modelValue: String,\n    tag: {\n      type: String as PropType<TagType>,\n      default: 'input'\n    }\n  },\n  // props are reactive\n  setup(props, context) {\n    const inputRef = reactive({\n      val: computed({\n        get: () => props.modelValue || '',\n        set: (val) => {\n          context.emit('update:modelValue', val);\n        }\n      }),\n      error: false,\n      message: ''\n    });\n\n    const validateHandle = () => {\n      if (props.rules) {\n        const allPassed = props.rules.every((rule) => {\n          let passed = true;\n          inputRef.message = rule.message;\n          switch (rule.type) {\n            case 'required':\n              passed = !(inputRef.val.trim() === '');\n              break;\n            case 'email':\n              passed = emailReg.test(inputRef.val);\n              break;\n            case 'custom':\n              passed = rule.validator ? rule.validator() : true;\n              break;\n            default:\n              break;\n          }\n          return passed;\n        });\n        inputRef.error = !allPassed;\n        return allPassed;\n      }\n      return true;\n    };\n    onMounted(() => {\n      // 给监听器发送信号\n      emitter.emit('form-item-created', validateHandle);\n    });\n    return { inputRef, validateHandle };\n  }\n});\n","import { render } from \"./validate-input.vue?vue&type=template&id=574c4524\"\nimport script from \"./validate-input.vue?vue&type=script&lang=ts\"\nexport * from \"./validate-input.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <div class=\"index-wrapper\">\n    <h2 class=\"pt-3\">者也专栏登陆</h2>\n    <!-- 登陆表单 start -->\n    <validate-form @form-submit=\"onFormSubmit\" class=\"pt-3\">\n      <div class=\"mb-3\">\n        <validate-input\n          type=\"email\"\n          label=\"用户名/邮箱\"\n          placeholder=\"请输入用户名/邮箱\"\n          v-model=\"emailRef\"\n          :rules=\"emailRules\"\n        ></validate-input>\n      </div>\n      <div class=\"mb-3\">\n        <validate-input\n          type=\"password\"\n          label=\"密码\"\n          placeholder=\"请输入密码\"\n          v-model=\"passwordVal\"\n          :rules=\"passwordRules\"\n        ></validate-input>\n      </div>\n      <div class=\"mb-3 form-check\">\n        <input type=\"checkbox\" class=\"form-check-input\" id=\"exampleCheck1\" />\n        <label class=\"form-check-label\" for=\"exampleCheck1\">Check me out</label>\n      </div>\n      <!-- 具名插槽 可以写为：v-slot:submit = #submit-->\n      <template #submit>\n        <span class=\"btn btn-primary\">\n          Submit\n        </span>\n      </template>\n      <!-- <button type=\"submit\" class=\"btn btn-primary\">Submit</button> -->\n    </validate-form>\n    <!-- 登陆表单 end -->\n  </div>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport ValidateInput, { RuleEmailType } from '../../components/validate-input.vue';\nimport ValidateForm from '../../components/validate-form.vue';\nimport createMessage from '../../components/create-message/index';\n\nexport default defineComponent({\n  name: 'Login',\n  props: {},\n  components: {\n    ValidateForm,\n    ValidateInput\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const emailRef = ref('');\n    const passwordVal = ref('');\n    const emailRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '电子邮箱地址不能为空'\n      },\n      {\n        type: 'email',\n        message: ' 请输入正确的电子邮箱格式'\n      }\n    ];\n    const passwordRules = [{ type: 'required', message: '密码不能为空' }];\n\n    const onFormSubmit = (result: boolean) => {\n      const payload = {\n        email: emailRef.value,\n        password: passwordVal.value\n      };\n      if (result) {\n        store\n          .dispatch('user/loginAndFetch', payload, { root: true })\n          .then((data) => {\n            console.log(store);\n\n            createMessage('登陆成功 2s后跳转到首页', 'success');\n            setTimeout(() => {\n              router.push('/');\n            }, 2000);\n          })\n          .catch((e) => {\n            console.log('login error: ', e);\n          });\n      }\n    };\n    return {\n      passwordVal,\n      passwordRules,\n      emailRules,\n      emailRef,\n      onFormSubmit\n    };\n  }\n});\n</script>\n<style scoped></style>\n","\nimport { defineComponent, ref } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport ValidateInput, { RuleEmailType } from '../../components/validate-input.vue';\nimport ValidateForm from '../../components/validate-form.vue';\nimport createMessage from '../../components/create-message/index';\n\nexport default defineComponent({\n  name: 'Login',\n  props: {},\n  components: {\n    ValidateForm,\n    ValidateInput\n  },\n  setup() {\n    const store = useStore();\n    const router = useRouter();\n    const emailRef = ref('');\n    const passwordVal = ref('');\n    const emailRules: RuleEmailType = [\n      {\n        type: 'required',\n        message: '电子邮箱地址不能为空'\n      },\n      {\n        type: 'email',\n        message: ' 请输入正确的电子邮箱格式'\n      }\n    ];\n    const passwordRules = [{ type: 'required', message: '密码不能为空' }];\n\n    const onFormSubmit = (result: boolean) => {\n      const payload = {\n        email: emailRef.value,\n        password: passwordVal.value\n      };\n      if (result) {\n        store\n          .dispatch('user/loginAndFetch', payload, { root: true })\n          .then((data) => {\n            console.log(store);\n\n            createMessage('登陆成功 2s后跳转到首页', 'success');\n            setTimeout(() => {\n              router.push('/');\n            }, 2000);\n          })\n          .catch((e) => {\n            console.log('login error: ', e);\n          });\n      }\n    };\n    return {\n      passwordVal,\n      passwordRules,\n      emailRules,\n      emailRef,\n      onFormSubmit\n    };\n  }\n});\n","import { render } from \"./index.vue?vue&type=template&id=5313770d\"\nimport script from \"./index.vue?vue&type=script&lang=ts\"\nexport * from \"./index.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","<template>\n  <form class=\"validate-form-wrapper\">\n    <slot name=\"default\"></slot>\n    <div class=\"submit-area pb-3\" @click.prevent=\"submitForm\">\n      <slot name=\"submit\">\n        <button type=\"submit\" class=\"btn btn-primary\">\n          提交\n        </button>\n      </slot>\n    </div>\n  </form>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, onUnmounted } from \"vue\";\nimport mitt from \"mitt\";\ntype ValidateFunc = () => boolean;\n// 创建一个监听器\nexport const emitter = mitt();\nexport default defineComponent({\n  name: \"ValidateForm\",\n  props: {},\n  emits: [\"form-submit\"],\n  setup(props, context) {\n    let funcArr: ValidateFunc[] = [];\n\n    const submitForm = () => {\n      const result = funcArr.map((func) => func()).every((res) => res);\n      context.emit(\"form-submit\", result);\n    };\n    // 事件回调函数\n    const callback: any = (func: ValidateFunc) => {\n      funcArr.push(func);\n    };\n    // 将回调函数添加到监听器中\n    emitter.on(\"form-item-created\", callback);\n    // 组件卸载时清理监听器\n    onUnmounted(() => {\n      emitter.off(\"form-item-created\", callback);\n      funcArr = [];\n    });\n\n    return { submitForm };\n  },\n  // mounted() {\n  //   this.$on(\"item-created\", () => {});\n  // }, // 建议使用mitt代替\n});\n</script>\n<style scoped></style>\n","export default function(n){return{all:n=n||new Map,on:function(t,e){var i=n.get(t);i&&i.push(e)||n.set(t,[e])},off:function(t,e){var i=n.get(t);i&&i.splice(i.indexOf(e)>>>0,1)},emit:function(t,e){(n.get(t)||[]).slice().map(function(n){n(e)}),(n.get(\"*\")||[]).slice().map(function(n){n(t,e)})}}}\n//# sourceMappingURL=mitt.es.js.map\n","\nimport { defineComponent, onUnmounted } from \"vue\";\nimport mitt from \"mitt\";\ntype ValidateFunc = () => boolean;\n// 创建一个监听器\nexport const emitter = mitt();\nexport default defineComponent({\n  name: \"ValidateForm\",\n  props: {},\n  emits: [\"form-submit\"],\n  setup(props, context) {\n    let funcArr: ValidateFunc[] = [];\n\n    const submitForm = () => {\n      const result = funcArr.map((func) => func()).every((res) => res);\n      context.emit(\"form-submit\", result);\n    };\n    // 事件回调函数\n    const callback: any = (func: ValidateFunc) => {\n      funcArr.push(func);\n    };\n    // 将回调函数添加到监听器中\n    emitter.on(\"form-item-created\", callback);\n    // 组件卸载时清理监听器\n    onUnmounted(() => {\n      emitter.off(\"form-item-created\", callback);\n      funcArr = [];\n    });\n\n    return { submitForm };\n  },\n  // mounted() {\n  //   this.$on(\"item-created\", () => {});\n  // }, // 建议使用mitt代替\n});\n","import { render } from \"./validate-form.vue?vue&type=template&id=7150e310\"\nimport script from \"./validate-form.vue?vue&type=script&lang=ts\"\nexport * from \"./validate-form.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}